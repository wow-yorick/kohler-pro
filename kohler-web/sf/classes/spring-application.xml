<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.0.xsd     
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- 加载外部的properties配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<util:properties id="settings" location="classpath:app.properties"></util:properties>

	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<!-- 扫描service、dao对应的包 -->
	<context:annotation-config />
	<context:component-scan base-package="com.kohler.service"></context:component-scan>
	<context:component-scan base-package="com.kohler.dao"></context:component-scan>
	<context:component-scan base-package="com.kohler.util"></context:component-scan>
	<context:component-scan base-package="com.kohler.filter"></context:component-scan>
	<context:component-scan base-package="com.kohler.tag"></context:component-scan>

	<!-- DB配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://192.168.0.212:3306/kohler-test?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;allowMultiQueries=true" />
		 <!-- <property name="user" value="${db.user}"/> <property name="password" 
			value="${db.pass}"/>  -->
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<property name="maxPoolSize" value="50" />
		<property name="maxStatements" value="20" />
		<property name="initialPoolSize" value="5" />
		<property name="minPoolSize" value="10" />
		<property name="user" value="root" />
		<property name="password" value="root" />
		<property name="testConnectionOnCheckin" value="true" />
		<property name="testConnectionOnCheckout" value="true" />
	</bean>

	<!-- jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:annotation-driven />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- Zookeeper -->
	<bean id="zookeeperFactoryBean"
		class="com.kohler.framework.zookeeper.bean.ZookeeperFactoryBean"
		lazy-init="false">
		<property name="zkConnectionString"
			value="192.168.0.103:2181,192.168.0.104:2181,192.168.0.105:2181" />

		<property name="listeners">
			<list>
				<bean class="com.kohler.framework.zookeeper.listener.ZookeeperListener">
					<constructor-arg value="/RedisHashWorkers" />
				</bean>
			</list>
		</property>
	</bean>
	<!-- 定时发布任务 -->
	<bean id="rs" class="com.kohler.service.util.Job1" />
	<bean id="jobDetail"
	class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="rs" />
		<property name="targetMethod" value="doJob2" />
		<property name="concurrent" value="false" /><!-- 作业不并发调度 -->
	</bean>
	<!-- 配置作业调度的触发方式（触发器） -->
	<bean id="trigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<property name="repeatInterval" value="3000"/>
		<property name="repeatCount" value="-1"/>
		<property name="name" value="t1"/>
		<property name="startDelay" value="2000"/>
		<property name="jobDetail" ref="jobDetail"/>
	</bean>
	<bean id="trigger2" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="jobDetail"/>
		<property name="name" value="t2"/>
		<property name="cronExpression" value="0 0 12 * * ?"/>
	</bean>
	<!-- 配置调度工厂  -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="trigger2"/>
			</list>
		</property>
	</bean>
</beans>
