<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.0.xsd     
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- 加载外部的properties配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<util:properties id="settings" location="classpath:app.properties"></util:properties>

	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<!-- 扫描service、dao对应的包 -->
	<context:annotation-config />
	<context:component-scan base-package="com.kohler.service"></context:component-scan>
	<context:component-scan base-package="com.kohler.dao"></context:component-scan>
	<context:component-scan base-package="com.kohler.util"></context:component-scan>
	<context:component-scan base-package="com.kohler.filter"></context:component-scan>
	<context:component-scan base-package="com.kohler.tag"></context:component-scan>

	<!-- DB配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="driverClass" value="${datasource.driverClassName}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="user" value="${datasource.username}"></property>
		<property name="password" value="${datasource.password}"></property>
		<property name="acquireIncrement" value="1"></property>
		<property name="initialPoolSize" value="200"></property>
		<property name="maxIdleTime" value="60"></property>
		<property name="maxPoolSize" value="100"></property>
		<property name="minPoolSize" value="50"></property>

		<property name="acquireRetryDelay" value="1000"></property>
		<property name="acquireRetryAttempts" value="60"></property>
		<property name="breakAfterAcquireFailure" value="false"></property>
	</bean>

	<!-- jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<tx:annotation-driven />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- Zookeeper <bean id="zookeeperFactoryBean" class="com.kohler.framework.zookeeper.bean.ZookeeperFactoryBean" 
		lazy-init="false"> <property name="zkConnectionString" value="192.168.0.103:2181,192.168.0.104:2181,192.168.0.105:2181" 
		/> <property name="listeners"> <list> <bean class="com.kohler.framework.zookeeper.listener.ZookeeperListener"> 
		<constructor-arg value="/RedisHashWorkers" /> </bean> </list> </property> 
		</bean> -->
</beans>
